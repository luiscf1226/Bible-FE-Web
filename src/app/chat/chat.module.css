.container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background-color: #343541;
  background-image: 
    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
  color: white;
}

.chatContainer {
  flex: 1;
  display: flex;
  flex-direction: column;
  max-width: 1000px;
  margin: 0 auto;
  width: 100%;
  padding: 1rem;
}

.header {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  padding: 2rem;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 1rem;
  margin-bottom: 1rem;
  margin-top: 2rem;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.header h1 {
  color: white;
  font-size: 2rem;
  margin: 0;
  text-align: center;
  font-weight: 600;
}

.headerControls {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 1rem;
  width: 100%;
}

.headerControls h1 {
  margin: 0;
  font-size: 1.5rem;
  color: white;
}

.muteButton {
  margin-left: 1rem;
}

/* Feeling selector styles */
.feelingSelector {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  padding: 0 1rem;
}

.feelingButton {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 0.5rem;
  background: rgba(255, 255, 255, 0.1);
  color: #fff;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  backdrop-filter: blur(4px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.feelingButton:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

.feelingButton:active {
  transform: translateY(0);
}

.feelingButton.selected {
  background: rgba(255, 255, 255, 0.3);
  border-color: rgba(255, 255, 255, 0.4);
}

.emoji {
  font-size: 1.5rem;
}

.feelingText {
  font-weight: 500;
}

/* Error alert styles */
.errorAlert {
  position: fixed;
  top: 1rem;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 1rem 2rem;
  border-radius: 0.5rem;
  display: flex;
  align-items: center;
  gap: 1rem;
  z-index: 1000;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  animation: slideDown 0.3s ease-out;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.errorAlert p {
  margin: 0;
  font-size: 0.9rem;
}

.errorAlert button {
  background: none;
  border: none;
  color: white;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0;
  line-height: 1;
  opacity: 0.7;
  transition: opacity 0.2s;
}

.errorAlert button:hover {
  opacity: 1;
}

@keyframes slideDown {
  from {
    transform: translate(-50%, -100%);
    opacity: 0;
  }
  to {
    transform: translate(-50%, 0);
    opacity: 1;
  }
}

@media (max-width: 768px) {
  .chatContainer {
    padding: 0.75rem;
  }

  .header {
    padding: 1.5rem 1rem;
    margin-top: 1rem;
    gap: 1.25rem;
  }

  .header h1 {
    font-size: 1.75rem;
  }

  .feelingSelector {
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    gap: 0.75rem;
    padding: 0;
  }

  .feelingButton {
    padding: 0.4rem 0.8rem;
    font-size: 0.85rem;
  }

  .emoji {
    font-size: 1.25rem;
  }

  .imageToggle {
    padding: 0.4rem 0.8rem;
    font-size: 0.85rem;
  }

  .imageToggle svg {
    font-size: 1rem;
  }

  .speakButton {
    min-width: 110px !important;
    padding: 0.4rem 0.8rem !important;
  }
}

@media (max-width: 480px) {
  .chatContainer {
    padding: 0.5rem;
  }

  .header {
    padding: 1.25rem 0.75rem;
    margin-top: 0.75rem;
    gap: 1rem;
  }

  .header h1 {
    font-size: 1.5rem;
  }

  .feelingSelector {
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
    gap: 0.5rem;
  }

  .feelingButton {
    padding: 0.3rem 0.6rem;
    font-size: 0.8rem;
    border-radius: 0.4rem;
  }

  .emoji {
    font-size: 1.1rem;
  }

  .errorAlert {
    width: 95%;
    padding: 0.625rem 1.25rem;
  }

  .imageToggle {
    padding: 0.3rem 0.6rem;
    font-size: 0.8rem;
    border-radius: 0.4rem;
  }

  .imageToggle span {
    display: inline;
  }

  .imageToggle svg {
    font-size: 0.9rem;
  }

  .speakButton {
    min-width: 100px !important;
    padding: 0.3rem 0.6rem !important;
    border-radius: 0.4rem !important;
  }

  .feelingButton,
  .imageToggle,
  .speakButton {
    min-width: auto !important;
    padding: 0.3rem 0.6rem !important;
    border-radius: 0.4rem !important;
  }

  .feelingButton .text,
  .imageToggle .text,
  .speakButton .text {
    display: inline !important;
  }
}

.controls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.imageToggle {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 0.5rem;
  background: rgba(255, 255, 255, 0.1);
  color: #fff;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  backdrop-filter: blur(4px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.imageToggle:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

.imageToggle:active {
  transform: translateY(0);
}

.imageToggle.active {
  background: rgba(255, 255, 255, 0.3);
  border-color: rgba(255, 255, 255, 0.4);
}

.imageToggle svg {
  font-size: 1.1rem;
}

.speakButton {
  min-width: 120px !important;
  border-radius: 0.5rem !important;
  padding: 0.5rem 1rem !important;
  background: rgba(255, 255, 255, 0.1) !important;
  border: 1px solid rgba(255, 255, 255, 0.2) !important;
  color: #fff !important;
  backdrop-filter: blur(4px);
}

.speakButton:hover {
  background: rgba(255, 255, 255, 0.2) !important;
  transform: translateY(-1px);
}

.speakButton .text {
  display: inline-block !important;
  color: #fff !important;
}

/* SVG Message Styles */
.svgContainer {
  margin: 1rem 0;
  padding: 1rem;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 0.75rem;
  overflow: hidden;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.svgContainer svg {
  width: 100%;
  max-width: 400px;
  height: auto;
  display: block;
  margin: 0 auto;
} 